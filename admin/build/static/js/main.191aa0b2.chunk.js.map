{"version":3,"sources":["widget/index.js","telegramBotWidget/index.js","commentsWidget/index.js","emailWidget/index.js","imagesWidget/index.js","widgetsContailer/index.js","App.js","serviceWorker.js","index.js"],"names":["widget","_ref","name","title","description","Component","_React$Component","Widget","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleActive","event","onActiveChange","target","checked","handleActivation","setState","isDisabled","axios","put","config","apiPath","defineProperty","state","isActive","then","res","prevState","snackbarState","inherits","createClass","key","value","react_default","a","createElement","index_es","style","height","action","onChange","disabled","color","component","assign","React","TelegramBotWidget","deleteRecipient","id","isLoading","delete","concat","recipients","data","_this2","get","_ref2","_this3","_this$state","map","recipient","alt","src","photoUrl","defaultAvatar","primary","firstName","lastName","secondary","aria-label","Delete_default","onClick","withWidget","CommentsWidget","deleteComment","comments","onenSnackbar","message","aproveComment","approved","_ref3","addComment","author","text","post","_ref4","comment","toConsumableArray","handleChange","_ref5","_this$state2","Fragment","_id","fullWidth","required","label","margin","multiline","rowsMax","rows","EmailWidget","ImagesWidget","deleteImage","images","filter","i","addImage","url","image","cellHeight","cols","subtitle","actionIcon","container","spacing","xs","lg","item","textAlign","WidgetsContailer","handleOpen","modalOpen","handleClose","objectSpread","md","sm","telegramBotWidget","telegramBot","closeSnackbar","commentsWidget","imagesWidget","App","handleOnenSnackbar","open","handleCloseSnackbar","className","widgetsContailer","anchorOrigin","vertical","horizontal","onClose","autoHideDuration","ContentProps","aria-describedby","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.191aa0b2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Switch,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport config from \"../config.json\";\r\n\r\nexport default ({ name, title, description }) => Component =>\r\n  class Widget extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n        isActive: props.isActive,\r\n        isDisabled: false,\r\n        snackbarState: {}\r\n      };\r\n    }\r\n\r\n    toggleActive = event => {\r\n      this.props.onActiveChange(event.target.checked);\r\n    };\r\n\r\n    handleActivation = () => {\r\n      this.setState({\r\n        isDisabled: true\r\n      });\r\n      axios\r\n        .put(config.apiPath + \"/config\", {\r\n          [name]: !this.state.isActive\r\n        })\r\n        .then(res => {\r\n          this.setState(prevState => ({\r\n            isActive: !prevState.isActive,\r\n            isDisabled: false\r\n          }));\r\n        });\r\n    };\r\n\r\n    render() {\r\n      return (\r\n        <Card style={{ height: \"100%\" }}>\r\n          <CardHeader\r\n            action={\r\n              <Switch\r\n                checked={this.state.isActive}\r\n                onChange={this.handleActivation}\r\n                disabled={this.state.isDisabled}\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            title={title}\r\n          />\r\n          <CardContent>\r\n            <Typography component=\"p\">{description}</Typography>\r\n            <Component {...this.props} isActive={this.state.isActive} />\r\n          </CardContent>\r\n        </Card>\r\n      );\r\n    }\r\n  };\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemSecondaryAction,\r\n  ListItemText,\r\n  IconButton,\r\n  ListItemAvatar,\r\n  CircularProgress,\r\n  Avatar\r\n} from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport withWidget from \"../widget\";\r\nimport axios from \"axios\";\r\nimport config from \"../config.json\";\r\n\r\nclass TelegramBotWidget extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: true\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(config.apiPath + \"/telegramBot/recipients\")\r\n      .then(({ data: recipients }) => {\r\n        this.setState({\r\n          isLoading: false,\r\n          recipients\r\n        });\r\n      });\r\n  }\r\n\r\n  deleteRecipient = id => () => {\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    axios\r\n      .delete(config.apiPath + `/telegramBot/recipients/${id}`)\r\n      .then(({ data: recipients }) => {\r\n        this.setState({\r\n          isLoading: false,\r\n          recipients\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { isLoading, recipients } = this.state;\r\n    const { isActive } = this.props;\r\n\r\n    if (isLoading) {\r\n      return <CircularProgress />;\r\n    }\r\n\r\n    return (\r\n      <List>\r\n        {recipients.map(recipient => (\r\n          <ListItem key={recipient.id}>\r\n            <ListItemAvatar>\r\n              <Avatar\r\n                alt=\"Remy Sharp\"\r\n                src={recipient.photoUrl || config.defaultAvatar}\r\n              />\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n              primary={`${recipient.firstName} ${recipient.lastName}`}\r\n              secondary={recipient.id}\r\n            />\r\n            <ListItemSecondaryAction>\r\n              <IconButton disabled={!isActive} aria-label=\"Delete\">\r\n                <DeleteIcon onClick={this.deleteRecipient(recipient.id)} />\r\n              </IconButton>\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withWidget({\r\n  name: \"telegramBot\",\r\n  title: \"Telegram Bot\",\r\n  description:\r\n    \"Here you can see and edit list of telegram users which will receive messages about booking and adding new comment\"\r\n})(TelegramBotWidget);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  IconButton,\r\n  ListItemSecondaryAction,\r\n  Checkbox,\r\n  CircularProgress,\r\n  TextField,\r\n  Typography,\r\n  ExpansionPanel,\r\n  ExpansionPanelSummary,\r\n  ExpansionPanelDetails,\r\n  FormControl,\r\n  Button,\r\n  ListItemAvatar,\r\n  Avatar\r\n} from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport withWidget from \"../widget\";\r\nimport axios from \"axios\";\r\nimport config from \"../config.json\";\r\n\r\nclass CommentsWidget extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: true,\r\n      author: \"\",\r\n      text: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(config.apiPath + \"/comments\").then(({ data: comments }) => {\r\n      this.setState({\r\n        isLoading: false,\r\n        comments\r\n      });\r\n    });\r\n  }\r\n\r\n  deleteComment = id => () => {\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    axios\r\n      .delete(config.apiPath + `/comments/${id}`)\r\n      .then(({ data: comments }) => {\r\n        this.props.onenSnackbar({\r\n          message: \"Comment deleted\"\r\n        });\r\n        this.setState({\r\n          isLoading: false,\r\n          comments\r\n        });\r\n      });\r\n  };\r\n\r\n  aproveComment = id => ({ target: { checked } }) => {\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    axios\r\n      .put(config.apiPath + `/comments/${id}/approve`, {\r\n        approved: checked\r\n      })\r\n      .then(({ data: comments }) => {\r\n        this.props.onenSnackbar({\r\n          message: `Comment ${checked ? \"approved\" : \"rejected\"}`\r\n        });\r\n        this.setState({\r\n          isLoading: false,\r\n          comments\r\n        });\r\n      });\r\n  };\r\n\r\n  addComment = () => {\r\n    const { author, text } = this.state;\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    axios\r\n      .post(config.apiPath + `/comments`, { author, text })\r\n      .then(({ data: comment }) => {\r\n        this.props.onenSnackbar({\r\n          message: \"Comment added\"\r\n        });\r\n        this.setState(prevState => ({\r\n          isLoading: false,\r\n          author: \"\",\r\n          text: \"\",\r\n          comments: [...prevState.comments, comment]\r\n        }));\r\n      });\r\n  };\r\n\r\n  handleChange = name => event => {\r\n    this.setState({\r\n      [name]: event.target.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { isLoading, comments, author, text } = this.state;\r\n    const { isActive } = this.props;\r\n\r\n    if (isLoading) {\r\n      return <CircularProgress />;\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <List>\r\n          {comments.map(comment => (\r\n            <ListItem key={comment._id}>\r\n              <ListItemAvatar>\r\n                <Avatar alt=\"Remy Sharp\" src={config.defaultAvatar} />\r\n              </ListItemAvatar>\r\n              <ListItemText primary={comment.text} secondary={comment.author} />\r\n              <ListItemSecondaryAction>\r\n                <Checkbox\r\n                  checked={comment.approved}\r\n                  disabled={!isActive}\r\n                  onChange={this.aproveComment(comment._id)}\r\n                  color=\"primary\"\r\n                />\r\n                <IconButton disabled={!isActive} aria-label=\"Delete\">\r\n                  <DeleteIcon onClick={this.deleteComment(comment._id)} />\r\n                </IconButton>\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <ExpansionPanel>\r\n          <ExpansionPanelSummary>\r\n            <Typography>Add new comment</Typography>\r\n          </ExpansionPanelSummary>\r\n          <ExpansionPanelDetails>\r\n            <FormControl fullWidth required>\r\n              <TextField\r\n                label=\"Name\"\r\n                disabled={!isActive}\r\n                required\r\n                value={author}\r\n                onChange={this.handleChange(\"author\")}\r\n                margin=\"dense\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                label=\"Comment\"\r\n                required\r\n                disabled={!isActive}\r\n                multiline\r\n                rowsMax=\"5\"\r\n                rows=\"2\"\r\n                value={text}\r\n                onChange={this.handleChange(\"text\")}\r\n                margin=\"dense\"\r\n                fullWidth\r\n              />\r\n              <Button disabled={!author || !text} onClick={this.addComment}>\r\n                Save\r\n              </Button>\r\n            </FormControl>\r\n          </ExpansionPanelDetails>\r\n        </ExpansionPanel>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withWidget({\r\n  name: \"comments\",\r\n  title: \"User comments\",\r\n  description: \"List of user comments\"\r\n})(CommentsWidget);\r\n","import React, { Component } from \"react\";\r\nimport withWidget from \"../widget\";\r\n\r\nclass EmailWidget extends Component {\r\n  render() {\r\n    return (\r\n      <div>Some content</div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withWidget({\r\n  name: 'email',\r\n  title: \"Email Notifications\",\r\n  description: \"Email Notifications\"\r\n})(EmailWidget);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  IconButton,\r\n  ListItemSecondaryAction,\r\n  CircularProgress,\r\n  TextField,\r\n  Typography,\r\n  ExpansionPanel,\r\n  ExpansionPanelSummary,\r\n  ExpansionPanelDetails,\r\n  Button,\r\n  Grid,\r\n  ListItemAvatar,\r\n  Avatar,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n  ListSubheader\r\n} from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport withWidget from \"../widget\";\r\nimport axios from \"axios\";\r\nimport config from \"../config.json\";\r\n\r\nclass ImagesWidget extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: true,\r\n      url: \"\",\r\n      name: \"\",\r\n      description: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(config.apiPath + \"/images\").then(({ data: images }) => {\r\n      this.setState({\r\n        isLoading: false,\r\n        images\r\n      });\r\n    });\r\n  }\r\n\r\n  deleteImage = _id => () => {\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    axios.delete(config.apiPath + `/images/${_id}`).then(() => {\r\n      this.props.onenSnackbar({\r\n        message: \"Image deleted\"\r\n      });\r\n      this.setState(prevState => ({\r\n        isLoading: false,\r\n        images: prevState.images.filter(i => i._id !== _id)\r\n      }));\r\n    });\r\n  };\r\n\r\n  addImage = () => {\r\n    const { name, url, description } = this.state;\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    axios\r\n      .post(config.apiPath + `/images`, { name, url, description })\r\n      .then(({ data: image }) => {\r\n        this.props.onenSnackbar({\r\n          message: \"Image added\"\r\n        });\r\n        this.setState(prevState => ({\r\n          isLoading: false,\r\n          name: \"\",\r\n          url: \"\",\r\n          description: \"\",\r\n          images: [...prevState.images, image]\r\n        }));\r\n      });\r\n  };\r\n\r\n  handleChange = name => event => {\r\n    this.setState({\r\n      [name]: event.target.value\r\n    });\r\n  };\r\n\r\n  /*onChange = event => {\r\n    let file = event.target.files[0];\r\n    let reader = new FileReader();\r\n    reader.onloadend = () => {\r\n      console.log(\"RESULT\", reader.result);\r\n    };\r\n    reader.readAsDataURL(file);\r\n  };*/\r\n\r\n  render() {\r\n    const { isLoading, url, name, description, images } = this.state;\r\n    const { isActive } = this.props;\r\n\r\n    if (isLoading) {\r\n      return <CircularProgress />;\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <GridList cellHeight={180}>\r\n          <GridListTile key=\"Subheader\" cols={2} style={{ height: \"auto\" }}>\r\n            <ListSubheader component=\"div\">Gallery</ListSubheader>\r\n          </GridListTile>\r\n          {images.map(image => (\r\n            <GridListTile key={image._id}>\r\n              <img src={image.url} alt={image.name} />\r\n              <GridListTileBar\r\n                title={image.name}\r\n                subtitle={image.description}\r\n                actionIcon={\r\n                  <IconButton disabled={!isActive} aria-label=\"Delete\">\r\n                    <DeleteIcon onClick={this.deleteImage(image._id)} />\r\n                  </IconButton>\r\n                }\r\n              />\r\n            </GridListTile>\r\n          ))}\r\n        </GridList>\r\n        <ExpansionPanel>\r\n          <ExpansionPanelSummary>\r\n            <Typography>Add new image</Typography>\r\n          </ExpansionPanelSummary>\r\n          <ExpansionPanelDetails>\r\n            <Grid container spacing={24}>\r\n              <Grid container xs={12} lg={8}>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    label=\"Image name\"\r\n                    value={name}\r\n                    onChange={this.handleChange(\"name\")}\r\n                    margin=\"dense\"\r\n                    disabled={!isActive}\r\n                    fullWidth\r\n                  />\r\n                  <TextField\r\n                    label=\"Image link\"\r\n                    value={url}\r\n                    onChange={this.handleChange(\"url\")}\r\n                    margin=\"dense\"\r\n                    fullWidth\r\n                    disabled={!isActive}\r\n                    multiline\r\n                    required\r\n                    rowsMax=\"5\"\r\n                  />\r\n                  <TextField\r\n                    label=\"Description\"\r\n                    value={description}\r\n                    onChange={this.handleChange(\"description\")}\r\n                    margin=\"dense\"\r\n                    fullWidth\r\n                    disabled={!isActive}\r\n                    multiline\r\n                    rowsMax=\"5\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Button\r\n                    fullWidth\r\n                    disabled={!url || !isActive}\r\n                    onClick={this.addImage}\r\n                  >\r\n                    Save\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid style={{ textAlign: \"center\" }} item xs={true}>\r\n                <img src={url} style={{ height: \"150px\" }} />\r\n              </Grid>\r\n            </Grid>\r\n          </ExpansionPanelDetails>\r\n        </ExpansionPanel>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withWidget({\r\n  name: \"images\",\r\n  title: \"Images\",\r\n  description: \"Upload or delete images which will be displayed in gallery\"\r\n})(ImagesWidget);\r\n","import React, { Component } from \"react\";\r\nimport { LinearProgress, Grid } from \"@material-ui/core\";\r\nimport TelegramBotWidget from \"../telegramBotWidget\";\r\nimport CommentsWidget from \"../commentsWidget\";\r\nimport EmailWidget from \"../emailWidget\";\r\nimport ImagesWidget from \"../imagesWidget\";\r\nimport axios from \"axios\";\r\nimport config from \"../config.json\";\r\n\r\nclass WidgetsContailer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isLoading: true,\r\n      modalOpen: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(config.apiPath + \"/config\").then(({ data: config }) => {\r\n      this.setState({\r\n        isLoading: false,\r\n        ...config\r\n      });\r\n    });\r\n  }\r\n\r\n  handleOpen = () => {\r\n    this.setState({ modalOpen: true });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ modalOpen: false });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.isLoading) {\r\n      return <LinearProgress />;\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Grid container spacing={16}>\r\n          <Grid item lg={4} md={6} sm={6} xs={12}>\r\n            <TelegramBotWidget\r\n              isActive={this.state.telegramBot}\r\n              onenSnackbar={this.props.onenSnackbar}\r\n              closeSnackbar={this.props.closeSnackbar}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={4} md={6} sm={6} xs={12}>\r\n            <CommentsWidget\r\n              isActive={this.state.comments}\r\n              onenSnackbar={this.props.onenSnackbar}\r\n              closeSnackbar={this.props.closeSnackbar}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={8} md={6} sm={6} xs={12}>\r\n            <ImagesWidget\r\n              isActive={this.state.images}\r\n              onenSnackbar={this.props.onenSnackbar}\r\n              closeSnackbar={this.props.closeSnackbar}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WidgetsContailer;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Snackbar } from \"@material-ui/core\";\nimport WidgetsContailer from \"./widgetsContailer\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      snackbarState: {}\n    };\n  }\n\n  handleOnenSnackbar = state => {\n    this.setState(prevState => ({\n      ...prevState,\n      snackbarState: {\n        ...prevState.snackbarState,\n        ...state,\n        open: true\n      }\n    }));\n  };\n\n  handleCloseSnackbar = () => {\n    this.setState(prevState => ({\n      ...prevState,\n      snackbarState: { ...prevState.snackbarState, open: false }\n    }));\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p>Nails Admin</p>\n        </header>\n        <main>\n          <WidgetsContailer\n            onenSnackbar={this.handleOnenSnackbar}\n            closeSnackbar={this.handleCloseSnackbar}\n          />\n        </main>\n        <Snackbar\n          anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\n          open={this.state.snackbarState.open}\n          onClose={this.handleCloseSnackbar}\n          autoHideDuration={3000}\n          ContentProps={{\n            \"aria-describedby\": \"message-id\"\n          }}\n          {...this.state.snackbarState}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}